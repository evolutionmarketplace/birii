# Generated by Django 4.2.16 on 2025-07-17 09:38

import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('item', '0002_alter_category_options_item'),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ItemView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='item',
            options={'ordering': ('-created_at',)},
        ),
        migrations.RenameField(
            model_name='item',
            old_name='is_sold',
            new_name='delivery_available',
        ),
        migrations.AddField(
            model_name='category',
            name='category_type',
            field=models.CharField(choices=[('electronics', 'Electronics & Technology'), ('phones_tablets', 'Phones & Tablets'), ('computers_laptops', 'Computers & Laptops'), ('cameras_photo', 'Cameras & Photography'), ('audio_headphones', 'Audio & Headphones'), ('gaming_consoles', 'Gaming & Consoles'), ('smart_home', 'Smart Home & IoT'), ('wearable_tech', 'Wearable Technology'), ('cars', 'Cars & Automobiles'), ('motorcycles', 'Motorcycles & Scooters'), ('bicycles', 'Bicycles & E-bikes'), ('trucks_commercial', 'Trucks & Commercial Vehicles'), ('auto_parts', 'Auto Parts & Accessories'), ('boats_marine', 'Boats & Marine'), ('houses_sale', 'Houses for Sale'), ('apartments_rent', 'Apartments for Rent'), ('commercial_property', 'Commercial Property'), ('land_plots', 'Land & Plots'), ('vacation_rentals', 'Vacation Rentals'), ('mens_clothing', "Men's Clothing"), ('womens_clothing', "Women's Clothing"), ('shoes_footwear', 'Shoes & Footwear'), ('bags_accessories', 'Bags & Accessories'), ('jewelry_watches', 'Jewelry & Watches'), ('beauty_cosmetics', 'Beauty & Cosmetics'), ('furniture', 'Furniture'), ('home_decor', 'Home Decor'), ('kitchen_dining', 'Kitchen & Dining'), ('garden_outdoor', 'Garden & Outdoor'), ('tools_hardware', 'Tools & Hardware'), ('appliances', 'Home Appliances'), ('sports_equipment', 'Sports Equipment'), ('fitness_gym', 'Fitness & Gym'), ('outdoor_camping', 'Outdoor & Camping'), ('bicycles_sports', 'Sports Bicycles'), ('water_sports', 'Water Sports'), ('professional_services', 'Professional Services'), ('home_services', 'Home Services'), ('tutoring_education', 'Tutoring & Education'), ('health_wellness', 'Health & Wellness'), ('event_services', 'Event Services'), ('business_services', 'Business Services'), ('legal_services', 'Legal Services'), ('financial_services', 'Financial Services'), ('full_time_jobs', 'Full-time Jobs'), ('part_time_jobs', 'Part-time Jobs'), ('freelance_gigs', 'Freelance & Gigs'), ('internships', 'Internships'), ('remote_work', 'Remote Work'), ('baby_items', 'Baby Items'), ('kids_clothing', 'Kids Clothing'), ('toys_games', 'Toys & Games'), ('baby_gear', 'Baby Gear'), ('educational_toys', 'Educational Toys'), ('books', 'Books'), ('movies_music', 'Movies & Music'), ('magazines', 'Magazines'), ('educational_materials', 'Educational Materials'), ('pets_sale', 'Pets for Sale'), ('pet_supplies', 'Pet Supplies'), ('pet_services', 'Pet Services'), ('livestock', 'Livestock'), ('fresh_produce', 'Fresh Produce'), ('packaged_foods', 'Packaged Foods'), ('agricultural_products', 'Agricultural Products'), ('farming_equipment', 'Farming Equipment'), ('artwork', 'Artwork'), ('antiques', 'Antiques'), ('collectibles', 'Collectibles'), ('crafts_handmade', 'Crafts & Handmade'), ('office_supplies', 'Office Supplies'), ('industrial_equipment', 'Industrial Equipment'), ('business_equipment', 'Business Equipment'), ('wholesale_bulk', 'Wholesale & Bulk'), ('other', 'Other')], default='other', max_length=50),
        ),
        migrations.AddField(
            model_name='category',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='category',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='category',
            name='icon',
            field=models.CharField(default='fas fa-tag', max_length=50),
        ),
        migrations.AddField(
            model_name='category',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='item.category'),
        ),
        migrations.AddField(
            model_name='category',
            name='slug',
            field=models.SlugField(default=1, unique=True),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='item',
            name='admin_approved',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='item',
            name='condition',
            field=models.CharField(choices=[('new', 'Brand New'), ('like_new', 'Like New'), ('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor')], default='good', max_length=20),
        ),
        migrations.AddField(
            model_name='item',
            name='expires_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='item',
            name='favorites',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='item',
            name='image_2',
            field=cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='item_images'),
        ),
        migrations.AddField(
            model_name='item',
            name='image_3',
            field=cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='item_images'),
        ),
        migrations.AddField(
            model_name='item',
            name='image_4',
            field=cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='item_images'),
        ),
        migrations.AddField(
            model_name='item',
            name='image_5',
            field=cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='item_images'),
        ),
        migrations.AddField(
            model_name='item',
            name='is_featured',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='item',
            name='is_negotiable',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='item',
            name='is_reported',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='item',
            name='is_urgent',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='item',
            name='location',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='item',
            name='meta_description',
            field=models.CharField(blank=True, max_length=160),
        ),
        migrations.AddField(
            model_name='item',
            name='meta_title',
            field=models.CharField(blank=True, max_length=60),
        ),
        migrations.AddField(
            model_name='item',
            name='pickup_available',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='item',
            name='removal_reason',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='item',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('sold', 'Sold'), ('pending', 'Pending'), ('removed', 'Removed by Admin'), ('expired', 'Expired')], default='active', max_length=20),
        ),
        migrations.AddField(
            model_name='item',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='item',
            name='views',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='item',
            name='image',
            field=cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='item_images'),
        ),
        migrations.AlterField(
            model_name='item',
            name='price',
            field=models.DecimalField(decimal_places=2, max_digits=10),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['status', 'admin_approved'], name='item_item_status_86d062_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['category', 'status'], name='item_item_categor_00f6fd_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['created_at'], name='item_item_created_8704cc_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['price'], name='item_item_price_1916fc_idx'),
        ),
        migrations.AddField(
            model_name='itemview',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_views', to='item.item'),
        ),
        migrations.AddField(
            model_name='itemview',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='itemfavorite',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_favorites', to='item.item'),
        ),
        migrations.AddField(
            model_name='itemfavorite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='itemview',
            unique_together={('item', 'user', 'ip_address')},
        ),
        migrations.AlterUniqueTogether(
            name='itemfavorite',
            unique_together={('item', 'user')},
        ),
    ]
